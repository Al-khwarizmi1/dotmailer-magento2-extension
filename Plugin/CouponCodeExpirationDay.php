<?php

namespace Dotdigitalgroup\Email\Plugin;

/**
 * Class CouponCodeExpirationDay - ignore to change the expiration day for dotmailer coupon codes.
 *
 * @package Dotdigitalgroup\Email\Plugin
 */
class CouponCodeExpirationDay
{

    /**
     * @var \Magento\Framework\App\ResourceConnection
     */
    protected $resource;

    /**
     * CouponCodeExpirationDay constructor.
     *
     * @param \Dotdigitalgroup\Email\Helper\Data $helper
     * @param \Magento\Framework\App\ResourceConnection $resourceConnection
     * @param \DateTime $dateTime
     */
    public function __construct(
        \Dotdigitalgroup\Email\Helper\Data $helper,
        \Magento\Framework\App\ResourceConnection $resourceConnection,
        \DateTime $dateTime
    ) {
        $this->helper = $helper;
        $this->resource = $resourceConnection;
        $this->dateTime = $dateTime;
    }

    /**
     * Update auto generated Specific Coupon if it's rule changed
     *
     * @param  $rule
     * @return $this
     */
    public function aroundupdateSpecificCoupons($rule, callable $proceed)
    {
        if (!$rule || !$rule->getId() || !$rule->hasDataChanges()) {
            return $this;
        }

        $updateArray = [];
        if ($rule->dataHasChangedFor('uses_per_coupon')) {
            $updateArray['usage_limit'] = $rule->getUsesPerCoupon();
        }

        if ($rule->dataHasChangedFor('uses_per_customer')) {
            $updateArray['usage_per_customer'] = $rule->getUsesPerCustomer();
        }

        $ruleNewDate = $this->dateTime->formatDate($rule->getToDate());
        $ruleOldDate = $this->dateTime->formatDate($rule->getOrigData('to_date'));

        if ($ruleNewDate != $ruleOldDate) {
            $updateArray['expiration_date'] = $rule->getToDate();
        }

        if (!empty($updateArray)) {
            $this->resource->getConnection()->update(
                $this->resource->getTable('salesrule_coupon'),
                $updateArray,
                ['rule_id = ?' => $rule->getId(), 'generated_by_dotmailer is null']
            );
        }

        //update coupons generated by dotmailer. not to change expiration date
        $dotmailerUpdateArray = $updateArray;
        unset($dotmailerUpdateArray['expiration_date']);
        if (! empty($dotmailerUpdateArray)) {
            $this->resource->getConnection()->update(
                $this->resource->getTable('salesrule_coupon'),
                $dotmailerUpdateArray,
                ['rule_id = ?' => $rule->getId(), 'generated_by_dotmailer = 1']
            );
        }

        return $this;
    }
}
